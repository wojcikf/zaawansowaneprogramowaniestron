// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektWojcik.Models;

namespace ProjektWojcik.Migrations
{
    [DbContext(typeof(KsiegarniaKontekst))]
    partial class KsiegarniaKontekstModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjektWojcik.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie");

                    b.Property<string>("Nazwisko");

                    b.HasKey("Id");

                    b.ToTable("Autorzy");
                });

            modelBuilder.Entity("ProjektWojcik.AutorKsiazki", b =>
                {
                    b.Property<int>("IdAutora");

                    b.Property<int>("IdKsiazki");

                    b.HasKey("IdAutora", "IdKsiazki");

                    b.HasIndex("IdKsiazki");

                    b.ToTable("AutorzyKsiazek");
                });

            modelBuilder.Entity("ProjektWojcik.Gatunek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa");

                    b.HasKey("Id");

                    b.ToTable("Gatunki");
                });

            modelBuilder.Entity("ProjektWojcik.Ksiazka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AktulnaCena");

                    b.Property<DateTime>("DataPublikacji");

                    b.Property<int>("IdWydawcy");

                    b.Property<int>("LiczbaStron");

                    b.Property<decimal>("OryginalnaCena");

                    b.Property<string>("Tytul");

                    b.Property<int?>("WydawcaId");

                    b.HasKey("Id");

                    b.HasIndex("WydawcaId");

                    b.ToTable("Ksiazki");
                });

            modelBuilder.Entity("ProjektWojcik.Wydawca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa");

                    b.HasKey("Id");

                    b.ToTable("Wydawcy");
                });

            modelBuilder.Entity("ProjektWojcik.AutorKsiazki", b =>
                {
                    b.HasOne("ProjektWojcik.Autor", "Autor")
                        .WithMany("Ksiazki")
                        .HasForeignKey("IdAutora")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjektWojcik.Ksiazka", "Ksiazka")
                        .WithMany("Autorzy")
                        .HasForeignKey("IdKsiazki")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjektWojcik.Ksiazka", b =>
                {
                    b.HasOne("ProjektWojcik.Wydawca", "Wydawca")
                        .WithMany("Ksiazki")
                        .HasForeignKey("WydawcaId");
                });
#pragma warning restore 612, 618
        }
    }
}
